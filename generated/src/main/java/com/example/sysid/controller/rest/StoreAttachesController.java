/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.0-beta).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.sysid.controller.rest;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.example.sysid.model.resources.StoreAttachedInfoResource;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@RestController
@Tag(name = "store-attaches", description = "他サイト向け店舗情報")
public interface StoreAttachesController {

    /**
     * GET /store-attaches/get : 他サイト向け店舗情報取得
     * リクエストに指定された店舗IDリストに紐づく対向クライアントID、対向店舗IDのリストを返す\\n ※対向クライアントID／対向店舗IDが取得できない場合でもnullで返す
     *
     * @param storeIdList 店舗IDリスト (required)
     * @return 正常終了、処理エラーの場合も含む (status code 200)
     */
    @Operation(
        operationId = "getAttachedInfoList",
        summary = "他サイト向け店舗情報取得",
        description = "リクエストに指定された店舗IDリストに紐づく対向クライアントID、対向店舗IDのリストを返す ※対向クライアントID／対向店舗IDが取得できない場合でもnullで返す",
        tags = { "store-attaches" },
        responses = {
            @ApiResponse(responseCode = "200", description = "正常終了、処理エラーの場合も含む", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = StoreAttachedInfoResource.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/store-attaches/get",
        produces = { "application/json" }
    )
    @ResponseStatus(HttpStatus.OK)
    List<StoreAttachedInfoResource> getAttachedInfoList(
        @NotNull @Parameter(name = "storeIdList", description = "店舗IDリスト", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "storeIdList", required = true) List<String> storeIdList
    );

}
